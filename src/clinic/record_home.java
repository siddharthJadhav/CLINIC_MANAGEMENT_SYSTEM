/*
 * record_home.java
 *
 * Created on February 11, 2012, 11:23 PM
 */

package clinic;

/**
 *
 * @author  Administrator
 */


import java.util.Vector;
import javax.swing.*;
import java.sql.*;

public class record_home extends javax.swing.JFrame {
    
    /** Creates new form record_home */
    
       JTable jTable4;
    JScrollPane jScrollPane4; 
    String t1,t2,t3,t4,t5;
      Connection con;
    
    public record_home() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblfname = new javax.swing.JLabel();
        lbllname = new javax.swing.JLabel();
        lblcode = new javax.swing.JLabel();
        txtfname = new javax.swing.JTextField();
        txtlname = new javax.swing.JTextField();
        txtcode = new javax.swing.JTextField();
        btnopen = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        lblok = new javax.swing.JLabel();
        lblmiddle = new javax.swing.JLabel();
        txtmname = new javax.swing.JTextField();
        btnclear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblupdate = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update Record Home");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblfname.setFont(new java.awt.Font("Times New Roman", 0, 12));
        lblfname.setForeground(new java.awt.Color(0, 102, 0));
        lblfname.setText("FIRST NAME");
        lblfname.setName("lblfname"); // NOI18N

        lbllname.setFont(new java.awt.Font("Times New Roman", 0, 12));
        lbllname.setForeground(new java.awt.Color(0, 102, 0));
        lbllname.setText("LAST NAME");
        lbllname.setName("lbllname"); // NOI18N

        lblcode.setFont(new java.awt.Font("Times New Roman", 0, 12));
        lblcode.setForeground(new java.awt.Color(0, 102, 0));
        lblcode.setText("CODE");
        lblcode.setName("lblcode"); // NOI18N

        txtfname.setFont(new java.awt.Font("Times New Roman", 0, 14));
        txtfname.setForeground(new java.awt.Color(0, 102, 0));
        txtfname.setName("txtfname"); // NOI18N
        txtfname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfnameKeyReleased(evt);
            }
        });

        txtlname.setFont(new java.awt.Font("Times New Roman", 0, 14));
        txtlname.setForeground(new java.awt.Color(0, 102, 0));
        txtlname.setName("txtlname"); // NOI18N
        txtlname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtlnameKeyReleased(evt);
            }
        });

        txtcode.setFont(new java.awt.Font("Times New Roman", 0, 14));
        txtcode.setForeground(new java.awt.Color(0, 102, 0));
        txtcode.setName("txtcode"); // NOI18N
        txtcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcodeKeyReleased(evt);
            }
        });

        btnopen.setFont(new java.awt.Font("Times New Roman", 0, 14));
        btnopen.setForeground(new java.awt.Color(0, 102, 0));
        btnopen.setText("Open");
        btnopen.setName("btnopen"); // NOI18N
        btnopen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnopenActionPerformed(evt);
            }
        });

        btnback.setFont(new java.awt.Font("Times New Roman", 0, 14));
        btnback.setForeground(new java.awt.Color(0, 102, 0));
        btnback.setText("Back");
        btnback.setName("btnback"); // NOI18N
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        lblok.setName("lblok"); // NOI18N

        lblmiddle.setFont(new java.awt.Font("Times New Roman", 0, 12));
        lblmiddle.setForeground(new java.awt.Color(0, 102, 0));
        lblmiddle.setText("MIDDLE NAME");
        lblmiddle.setName("lblmiddle"); // NOI18N

        txtmname.setFont(new java.awt.Font("Times New Roman", 0, 14));
        txtmname.setForeground(new java.awt.Color(0, 102, 0));
        txtmname.setName("txtmname"); // NOI18N
        txtmname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtmnameKeyReleased(evt);
            }
        });

        btnclear.setFont(new java.awt.Font("Times New Roman", 0, 14));
        btnclear.setForeground(new java.awt.Color(0, 102, 0));
        btnclear.setText("Clear");
        btnclear.setName("btnclear"); // NOI18N
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(lblfname)
                                .add(137, 137, 137))
                            .add(lbllname)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(lblmiddle)
                                    .add(lblcode))
                                .add(28, 28, 28)
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(txtcode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(txtmname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                        .add(txtfname)
                                        .add(txtlname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 163, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(lblok))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(btnopen, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                        .add(22, 22, 22)
                        .add(btnclear, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 24, Short.MAX_VALUE)
                        .add(btnback, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                        .add(20, 20, 20))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(90, 90, 90)
                        .add(lblok))
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblfname)
                            .add(txtfname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(36, 36, 36)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblmiddle)
                            .add(txtmname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(37, 37, 37)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lbllname)
                            .add(txtlname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(37, 37, 37)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(txtcode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(lblcode))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 47, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnback, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnopen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnclear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(44, 44, 44))
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "F-Name", "M-Name", "L-Name", "Code", "Gender", "Contact", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        lblupdate.setFont(new java.awt.Font("Times New Roman", 1, 24));
        lblupdate.setForeground(new java.awt.Color(0, 102, 0));
        lblupdate.setText("UPDATE RECORD");
        lblupdate.setName("lblupdate"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(315, 315, 315)
                        .add(lblupdate)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(lblupdate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(40, 40, 40)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
// TODO add your handling code here:
       txtfname.setText("");
       txtmname.setText("");
       txtlname.setText("");
       txtcode.setText("");
    }//GEN-LAST:event_btnclearActionPerformed

    private void txtcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodeKeyReleased
// TODO add your handling code here:
     
        
        int i;
          
        t2=txtmname.getText().trim();
        t1=txtfname.getText().trim();
        t1.trim();
        t3=txtlname.getText().trim();
        t4=txtcode.getText().trim();
                        
        Vector columnnames=new Vector();
          Vector data=new Vector();
       JPanel panel=new JPanel();
             try
       {
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
         con=DriverManager.getConnection("jdbc:odbc:rock");
     
         Statement st=con.createStatement();
           
         ResultSet rs=st.executeQuery("select fname,mname,lname,code,gender,contact,address from register where fname like '"+t1+"%' and mname like '"+t2+"%' and lname like '"+t3+"%' and code like '"+t4+"%'");
         
         ResultSetMetaData md=rs.getMetaData();
         int columns=md.getColumnCount();
         for(i=1;i<=columns;i++)
          {
             columnnames.addElement(md.getColumnName(i));
          }
         while(rs.next())
          {
           Vector row=new Vector(columns);
           for(i=1;i<=columns;i++)
             {
              row.addElement(rs.getObject(i));
             }
           data.addElement(row);
          }
         
         
         st.close();
        con.close();
        }  catch(SQLException sq)
         {
            JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);
            
         } 
               catch(Exception e)
         {
         JOptionPane.showMessageDialog(this,"Error");
       
         }

      jTable4=new JTable(data,columnnames);
      jScrollPane4=new JScrollPane(jTable4);
      jTable1.setCellEditor(jTable4.getCellEditor());
      jScrollPane1.setViewportView(jTable4);

      if(data.isEmpty()==true){
       JOptionPane.showMessageDialog(this,"there is no data available");
         txtcode.setText("");
       }
        
    }//GEN-LAST:event_txtcodeKeyReleased

    private void txtlnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtlnameKeyReleased
// TODO add your handling code here:
                 String s=txtlname.getText();
        int a=s.length()-1;
        int j=(int)s.charAt(a);
        if(!((j>64&&j<91)||(j>95&&j<123)))
        {
            JOptionPane.showMessageDialog(this,"Enter only Character","Warning",JOptionPane.WARNING_MESSAGE);
            txtlname.setText("");
        }                     
        else
        {
        
        
        int i;
          
        t2=txtmname.getText().trim();
        t1=txtfname.getText().trim();
        t1.trim();
        t3=txtlname.getText().trim();
        t4=txtcode.getText().trim();
                        
        Vector columnnames=new Vector();
          Vector data=new Vector();
       JPanel panel=new JPanel();
             try
       {
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
         con=DriverManager.getConnection("jdbc:odbc:rock");
     
         Statement st=con.createStatement();
           
         ResultSet rs=st.executeQuery("select fname,mname,lname,code,gender,contact,address from register where fname like '"+t1+"%' and mname like '"+t2+"%' and lname like '"+t3+"%' and code like '"+t4+"%'");
         
         ResultSetMetaData md=rs.getMetaData();
         int columns=md.getColumnCount();
         for(i=1;i<=columns;i++)
          {
             columnnames.addElement(md.getColumnName(i));
          }
         while(rs.next())
          {
           Vector row=new Vector(columns);
           for(i=1;i<=columns;i++)
             {
              row.addElement(rs.getObject(i));
             }
           data.addElement(row);
          }
         
         
         st.close();
        con.close();
       } catch(SQLException sq)
         {
            JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);
            
         } 
               catch(Exception e)
         {
         JOptionPane.showMessageDialog(this,"Error");
       
         }

      jTable4=new JTable(data,columnnames);
      jScrollPane4=new JScrollPane(jTable4);
      jTable1.setCellEditor(jTable4.getCellEditor());
      jScrollPane1.setViewportView(jTable4);

      if(data.isEmpty()==true){
       JOptionPane.showMessageDialog(this,"there is no data available");
         txtlname.setText("");
       }
    }
        
    }//GEN-LAST:event_txtlnameKeyReleased

    private void txtmnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmnameKeyReleased
// TODO add your handling code here:
         String s=txtmname.getText();
        int a=s.length()-1;
        int j=(int)s.charAt(a);
        if(!((j>64&&j<91)||(j>95&&j<123)))
        {
            JOptionPane.showMessageDialog(this,"Enter only Character","Warning",JOptionPane.WARNING_MESSAGE);
            txtmname.setText("");
        }       
        else
        {
        
        int i;
          
        t2=txtmname.getText().trim();
        t1=txtfname.getText().trim();
        t1.trim();
        t3=txtlname.getText().trim();
        t4=txtcode.getText().trim();
                        
        Vector columnnames=new Vector();
          Vector data=new Vector();
       JPanel panel=new JPanel();
             try
       {
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
         con=DriverManager.getConnection("jdbc:odbc:rock");
    
    
         Statement st=con.createStatement();
           
         ResultSet rs=st.executeQuery("select fname,mname,lname,code,gender,contact,address from register where fname like '"+t1+"%' and mname like '"+t2+"%' and lname like '"+t3+"%' and code like '"+t4+"%'");
         
         ResultSetMetaData md=rs.getMetaData();
         int columns=md.getColumnCount();
         for(i=1;i<=columns;i++)
          {
             columnnames.addElement(md.getColumnName(i));
          }
         while(rs.next())
          {
           Vector row=new Vector(columns);
           for(i=1;i<=columns;i++)
             {
              row.addElement(rs.getObject(i));
             }
           data.addElement(row);
          }
         
         
         st.close();
        con.close();
        } catch(SQLException sq)
         {
            JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);
          
         } 
               catch(Exception e)
         {
         JOptionPane.showMessageDialog(this,"Error");
        
         }

      jTable4=new JTable(data,columnnames);
      jScrollPane4=new JScrollPane(jTable4);
      jTable1.setCellEditor(jTable4.getCellEditor());
      jScrollPane1.setViewportView(jTable4);

      if(data.isEmpty()==true){
       JOptionPane.showMessageDialog(this,"there is no data available");
         txtmname.setText("");
       }
    }
    }//GEN-LAST:event_txtmnameKeyReleased

    private void txtfnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfnameKeyReleased
// TODO add your handling code here:
                 String s=txtfname.getText();
        int a=s.length()-1;
        int j=(int)s.charAt(a);
        if(!((j>64&&j<91)||(j>95&&j<123)))
        {
            JOptionPane.showMessageDialog(this,"Enter only Character","Warning",JOptionPane.WARNING_MESSAGE);
            txtfname.setText("");
        } 
        else
        {
        
        
                           int i;
          
        t2=txtmname.getText().trim();
        t1=txtfname.getText().trim();
        t1.trim();
        t3=txtlname.getText().trim();
        t4=txtcode.getText().trim();
                        
        Vector columnnames=new Vector();
          Vector data=new Vector();
       JPanel panel=new JPanel();
             try
       {
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
         con=DriverManager.getConnection("jdbc:odbc:rock");
    
         Statement st=con.createStatement();
           
         ResultSet rs=st.executeQuery("select fname,mname,lname,code,gender,contact,address from register where fname like '"+t1+"%' and mname like '"+t2+"%' and lname like '"+t3+"%' and code like '"+t4+"%'");
         
         ResultSetMetaData md=rs.getMetaData();
         int columns=md.getColumnCount();
         for(i=1;i<=columns;i++)
          {
             columnnames.addElement(md.getColumnName(i));
          }
         while(rs.next())
          {
           Vector row=new Vector(columns);
           for(i=1;i<=columns;i++)
             {
              row.addElement(rs.getObject(i));
             }
           data.addElement(row);
          }
         
         
         st.close();
        con.close();
       } catch(SQLException sq)
         {
            JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);
          
         } 
               catch(Exception e)
         {
         JOptionPane.showMessageDialog(this,"Error");
         
         }

      jTable4=new JTable(data,columnnames);
      jScrollPane4=new JScrollPane(jTable4); 
      jTable1.setCellEditor(jTable4.getCellEditor());
      jScrollPane1.setViewportView(jTable4);

      if(data.isEmpty()==true){
       JOptionPane.showMessageDialog(this,"there is no data available");
       txtfname.setText("");
       } 
        }
    }//GEN-LAST:event_txtfnameKeyReleased

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
// TODO add your handling code here:
        
                          int i;
      Vector columnnames=new Vector();
      Vector data=new Vector();
     
      
             try
       {
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
         con=DriverManager.getConnection("jdbc:odbc:rock");
     
         Statement st=con.createStatement();
         ResultSet rs=st.executeQuery("select fname,mname,lname,code,gender,contact,address from register");
         ResultSetMetaData md=rs.getMetaData();
         int columns=md.getColumnCount();
         for(i=1;i<=columns;i++)
          {
             columnnames.addElement(md.getColumnName(i));
          }
         while(rs.next())
          {
           Vector row=new Vector(columns);
           for(i=1;i<=columns;i++)
             {
              row.addElement(rs.getObject(i));
             }
           data.addElement(row);
          }
         st.close();
        con.close();
        } catch(SQLException sq)
         {
            JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);
            this.dispose();
         } 
               catch(Exception e)
         {
         JOptionPane.showMessageDialog(this,"Error"+e);
          this.dispose();
         }

      jTable4=new JTable(data,columnnames);
      jScrollPane4=new JScrollPane(jTable4);
      jTable1.setCellEditor(jTable4.getCellEditor());
      jScrollPane1.setViewportView(jTable4);
        
        
    }//GEN-LAST:event_formWindowActivated

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
// TODO add your handling code here:
       
        this.dispose();
    }//GEN-LAST:event_btnbackActionPerformed

    private void btnopenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnopenActionPerformed
// TODO add your handling code here:
        String s="";
        int i=jTable4.getSelectedRow();
        int j=jTable4.getSelectedColumn();
        if(i < 0 && j < 0) 
         {
            JOptionPane.showMessageDialog(this,"No Record Selected");
         } 
       else 
         {
          Object o=jTable4.getValueAt(i,3);
          s=o.toString();
          try
           {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            con=DriverManager.getConnection("jdbc:odbc:rock");
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select fname,mname,lname,age,dob,gender,occupation,address,contact,mail,reference,relation,code,allergy from register where code='"+s+"'"); 
             while(rs.next())
               {
                String fname1,mname1,lname1,dob1,gender1,occupation1,address1,contact1,mail1,reference1,relation1,code1,allergy1;
                int age1;       
                          
                fname1=rs.getString("fname");
                mname1=rs.getString("mname");
                lname1=rs.getString("lname");
                age1=rs.getInt("age"); 
                dob1=rs.getString("dob");
                gender1=rs.getString("gender");
                occupation1=rs.getString("occupation");
                address1=rs.getString("address");
                contact1=rs.getString("contact");
                mail1=rs.getString("mail");
                reference1=rs.getString("reference");
                relation1=rs.getString("relation");
                code1=rs.getString("code");                
                allergy1=rs.getString("allergy");  
                update_record ru=new update_record(fname1,mname1,lname1,dob1,gender1,occupation1,address1,contact1,mail1,reference1,relation1,code1,allergy1,age1);
                ru.setVisible(true);
            }             
            
            st.close();
            con.close();
        } 
         catch(SQLException sq)
         {
            JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);
           
         } 
               catch(Exception e)
         {
         JOptionPane.showMessageDialog(this,"Error"+e);
         
         }
      }   
              
    }//GEN-LAST:event_btnopenActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new record_home().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnopen;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblcode;
    private javax.swing.JLabel lblfname;
    private javax.swing.JLabel lbllname;
    private javax.swing.JLabel lblmiddle;
    private javax.swing.JLabel lblok;
    private javax.swing.JLabel lblupdate;
    private javax.swing.JTextField txtcode;
    private javax.swing.JTextField txtfname;
    private javax.swing.JTextField txtlname;
    private javax.swing.JTextField txtmname;
    // End of variables declaration//GEN-END:variables
    
}
