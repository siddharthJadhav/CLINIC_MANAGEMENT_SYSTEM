/*
 * search.java
 *
 * Created on February 4, 2012, 5:44 AM
 */

package clinic;




import java.util.Vector;
import javax.swing.*;
import java.sql.*;


/**
 *
 * @author  Administrator
 */
public class search extends javax.swing.JFrame {
    /** Creates new form search */ 
  
    String name,fname,mname,lname,gender,code,allergy;
          
           int age; 
     card cd=new card(code,name,gender,allergy,age);
     boolean cdvi=cd.isVisible();
    JTable jTable4;
    JScrollPane jScrollPane4; 
    String t1,t2,t3,t4;
      Connection con;
    public search() {
        initComponents();
   
    }
    /** This method is called from within the constructor to
     * initialize the form.
     *
     *
     *
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblfname = new javax.swing.JLabel();
        lbllname = new javax.swing.JLabel();
        lblcode = new javax.swing.JLabel();
        txtfname = new javax.swing.JTextField();
        txtlname = new javax.swing.JTextField();
        txtcode = new javax.swing.JTextField();
        btnclear = new javax.swing.JButton();
        btnopen = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        lblmname = new javax.swing.JLabel();
        txtmname = new javax.swing.JTextField();
        btnshow = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Search");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPanel2KeyReleased(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jTable1.setForeground(new java.awt.Color(0, 102, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "F_Name", "M_Name", "L_Name", "Code", "Gender", "Contact", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblfname.setFont(new java.awt.Font("Times New Roman", 0, 12));
        lblfname.setForeground(new java.awt.Color(0, 102, 0));
        lblfname.setText("FIRST NAME");
        lblfname.setName("lblfname"); // NOI18N

        lbllname.setFont(new java.awt.Font("Times New Roman", 0, 12));
        lbllname.setForeground(new java.awt.Color(0, 102, 0));
        lbllname.setText("LAST NAME");
        lbllname.setName("lbllname"); // NOI18N

        lblcode.setFont(new java.awt.Font("Times New Roman", 0, 12));
        lblcode.setForeground(new java.awt.Color(0, 102, 0));
        lblcode.setText("CODE");
        lblcode.setName("lblcode"); // NOI18N

        txtfname.setFont(new java.awt.Font("Times New Roman", 0, 14));
        txtfname.setForeground(new java.awt.Color(0, 102, 0));
        txtfname.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtfname.setName("txtfname"); // NOI18N
        txtfname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfnameKeyReleased(evt);
            }
        });

        txtlname.setFont(new java.awt.Font("Times New Roman", 0, 14));
        txtlname.setForeground(new java.awt.Color(0, 102, 0));
        txtlname.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtlname.setName("txtlname"); // NOI18N
        txtlname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtlnameKeyReleased(evt);
            }
        });

        txtcode.setFont(new java.awt.Font("Times New Roman", 0, 14));
        txtcode.setForeground(new java.awt.Color(0, 102, 0));
        txtcode.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtcode.setName("txtcode"); // NOI18N
        txtcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcodeKeyReleased(evt);
            }
        });

        btnclear.setFont(new java.awt.Font("Times New Roman", 0, 12));
        btnclear.setForeground(new java.awt.Color(0, 102, 0));
        btnclear.setText("CLEAR");
        btnclear.setName("btnclear"); // NOI18N
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        btnopen.setFont(new java.awt.Font("Times New Roman", 0, 14));
        btnopen.setForeground(new java.awt.Color(0, 102, 0));
        btnopen.setText("CARD");
        btnopen.setName("btnopen"); // NOI18N
        btnopen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnopenActionPerformed(evt);
            }
        });

        btnback.setFont(new java.awt.Font("Times New Roman", 0, 14));
        btnback.setForeground(new java.awt.Color(0, 102, 0));
        btnback.setText("BACK");
        btnback.setName("btnback"); // NOI18N
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        lblmname.setFont(new java.awt.Font("Times New Roman", 0, 12));
        lblmname.setForeground(new java.awt.Color(0, 102, 0));
        lblmname.setText("MIDDLE NAME");
        lblmname.setName("lblmname"); // NOI18N

        txtmname.setFont(new java.awt.Font("Times New Roman", 0, 14));
        txtmname.setForeground(new java.awt.Color(0, 102, 0));
        txtmname.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtmname.setName("txtmname"); // NOI18N
        txtmname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtmnameKeyReleased(evt);
            }
        });

        btnshow.setFont(new java.awt.Font("Times New Roman", 0, 14));
        btnshow.setForeground(new java.awt.Color(0, 102, 0));
        btnshow.setText("SHOW");
        btnshow.setName("btnshow"); // NOI18N
        btnshow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnshowActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(lblfname)
                        .add(53, 53, 53)
                        .add(txtfname, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(lblmname)
                        .add(38, 38, 38)
                        .add(txtmname, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lbllname)
                            .add(lblcode))
                        .add(55, 55, 55)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(txtcode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(34, 34, 34))
                            .add(txtlname, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)))
                    .add(btnopen, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(btnclear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 118, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 65, Short.MAX_VALUE)
                        .add(btnback, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 125, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(btnshow, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(33, 33, 33)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblfname)
                    .add(txtfname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(19, 19, 19)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblmname)
                    .add(txtmname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(27, 27, 27)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lbllname)
                    .add(txtlname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(27, 27, 27)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtcode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblcode))
                .add(50, 50, 50)
                .add(btnopen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(25, 25, 25)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnback, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnclear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(btnshow, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Algerian", 1, 36));
        jLabel1.setForeground(new java.awt.Color(51, 153, 0));
        jLabel1.setText("RECORD OF PATIENT");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(260, 260, 260)
                        .add(jLabel1)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(25, 25, 25)
                .add(jLabel1)
                .add(40, 40, 40)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnshowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnshowActionPerformed
// TODO add your handling code here:
//  String t1,t2,t3,t4;
        
        String s="";
    int i=jTable4.getSelectedRow();
    int j=jTable4.getSelectedColumn();   
    if(i < 0 && j < 0)
     {
      JOptionPane.showMessageDialog(this,"No Record Selected");
     }
    else
     {    
      Object o=jTable4.getValueAt(i,3);
      s=o.toString();
      info a=new info(s);
      a.setVisible(true);  
     }
    }//GEN-LAST:event_btnshowActionPerformed

    private void txtmnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmnameKeyReleased
// TODO add your handling code here:
      String s=txtmname.getText();
      if(!(s.equals(""))) 
      {   
        int a=s.length()-1;
        int j=(int)s.charAt(a);
        if(!((j>64&&j<91)||(j>95&&j<123)))
        {
            JOptionPane.showMessageDialog(this,"Enter only letter");
            txtmname.setText("");
        } 
        else
        {       
        
        int i;
          
        t2=txtmname.getText().trim();
        t1=txtfname.getText().trim();
        t1.trim();
        t3=txtlname.getText().trim();
        t4=txtcode.getText().trim();
                        
        Vector columnnames=new Vector();
          Vector data=new Vector();
      
             try
       {
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
         con=DriverManager.getConnection("jdbc:odbc:rock");
     
    
         Statement st=con.createStatement();
           
         ResultSet rs=st.executeQuery("select fname as F_Name,mname as M_Name,lname as L_Name,code as Code,gender as Gender,contact as Contact,address as Address from register where fname like '"+t1+"%' and mname like '"+t2+"%'and lname like '"+t3+"%' and code like '"+t4+"%'");
         
         ResultSetMetaData md=rs.getMetaData();
         int columns=md.getColumnCount();
         for(i=1;i<=columns;i++)
          {
             columnnames.addElement(md.getColumnName(i));
          }
         while(rs.next())
          {
           Vector row=new Vector(columns);
           for(i=1;i<=columns;i++)
             {
              row.addElement(rs.getObject(i));
             }
           data.addElement(row);
          }
           jTable4=new JTable(data,columnnames);
      jScrollPane4=new JScrollPane(jTable4);
      jTable1.setCellEditor(jTable4.getCellEditor());
      jScrollPane1.setViewportView(jTable4);
        if(data.isEmpty()==true){
      JOptionPane.showMessageDialog(this,"there is no data available");
         txtfname.setText("");
       txtmname.setText("");
       txtlname.setText("");
       txtcode.setText("");
              }
         
         st.close();
        con.close();
        } catch(SQLException sq)
         {
              JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);   
            
         } 
         catch(Exception e)
         {
          JOptionPane.showMessageDialog(this,"There Is Error Occur ","Error",JOptionPane.ERROR_MESSAGE);  
         
         }

    
     
    } 
   }    
    }//GEN-LAST:event_txtmnameKeyReleased

    private void jPanel2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel2KeyReleased
// TODO add your handling code here:
    }//GEN-LAST:event_jPanel2KeyReleased

    private void txtcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodeKeyReleased
// TODO add your handling code here:
     String fname1;
     fname1=txtcode.getText().trim();
     if(!(fname1.equals("")))
     {
         int j=(int)fname1.charAt(0);
         if(!((j>64&&j<91)||(j>95&&j<123)))
           {
             JOptionPane.showMessageDialog(this,"First Enter only letter");
             txtcode.setText("");
           } 
          else
           {
            int i;
            t2=txtmname.getText().trim();
            t1=txtfname.getText().trim();
            t3=txtlname.getText().trim();
            t4=txtcode.getText().trim();
                        
        Vector columnnames=new Vector();
          Vector data=new Vector();
   
             try
       {
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
         con=DriverManager.getConnection("jdbc:odbc:rock");
     
         Statement st=con.createStatement();
           
         ResultSet rs=st.executeQuery("select fname as F_Name,mname as M_Name,lname as L_Name,code as Code,gender as Gender,contact as Contact,address as Address from register where fname like '"+t1+"%' and mname like '"+t2+"%' and lname like '"+t3+"%' and code like '"+t4+"%'");
         
         ResultSetMetaData md=rs.getMetaData();
         int columns=md.getColumnCount();
         for(i=1;i<=columns;i++)
          {
             columnnames.addElement(md.getColumnName(i));
          }
         while(rs.next())
          {
           Vector row=new Vector(columns);
           for(i=1;i<=columns;i++)
             {
              row.addElement(rs.getObject(i));
             }
           data.addElement(row);
          }
          jTable4=new JTable(data,columnnames);
      jScrollPane4=new JScrollPane(jTable4);
      jTable1.setCellEditor(jTable4.getCellEditor());
      jScrollPane1.setViewportView(jTable4);

     if(data.isEmpty()==true){
      JOptionPane.showMessageDialog(this,"there is no data available");
         txtfname.setText("");
       txtmname.setText("");
       txtlname.setText("");
       txtcode.setText("");
              
     }
         
         st.close();
        con.close();
        } catch(SQLException sq)
         {
              JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);   
             
         } 
         catch(Exception e)
         {
          JOptionPane.showMessageDialog(this,"There Is Error Occur ","Error",JOptionPane.ERROR_MESSAGE);  
      
         }

     
     }
   }   
    }//GEN-LAST:event_txtcodeKeyReleased

    private void txtlnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtlnameKeyReleased
      String s=txtlname.getText();
      if(!(s.equals("")))
      {    
        int a=s.length()-1;
        int j=(int)s.charAt(a);
        if(!((j>64&&j<91)||(j>95&&j<123)))
        {
            JOptionPane.showMessageDialog(this,"Enter only letter");
            txtlname.setText("");
        }                
        else
        {
        
        int i;
          
        t2=txtmname.getText().trim();
        t1=txtfname.getText().trim();
        t1.trim();
        t3=txtlname.getText().trim();
        t4=txtcode.getText().trim();
                        
        Vector columnnames=new Vector();
          Vector data=new Vector();
   
             try
       {
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
         con=DriverManager.getConnection("jdbc:odbc:rock");
   
         Statement st=con.createStatement();
           
         ResultSet rs=st.executeQuery("select fname as F_Name,mname as M_Name,lname as L_Name,code as Code,gender as Gender,contact as Contact,address as Address from register where fname like '"+t1+"%' and mname like '"+t2+"%' and lname like '"+t3+"%' and code like '"+t4+"%'");
         
         ResultSetMetaData md=rs.getMetaData();
         int columns=md.getColumnCount();
         for(i=1;i<=columns;i++)
          {
             columnnames.addElement(md.getColumnName(i));
          }
         while(rs.next())
          {
           Vector row=new Vector(columns);
           for(i=1;i<=columns;i++)
             {
              row.addElement(rs.getObject(i));
             }
           data.addElement(row);
          }
         
          jTable4=new JTable(data,columnnames);
      jScrollPane4=new JScrollPane(jTable4);
      jTable1.setCellEditor(jTable4.getCellEditor());
      jScrollPane1.setViewportView(jTable4);
        if(data.isEmpty()==true){
      JOptionPane.showMessageDialog(this,"there is no data available");
         txtfname.setText("");
       txtmname.setText("");
       txtlname.setText("");
       txtcode.setText("");
              }
         st.close();
        con.close();
        } catch(SQLException sq)
         {
              JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);   
            
         } 
         catch(Exception e)
         {
          JOptionPane.showMessageDialog(this,"There Is Error Occur ","Error",JOptionPane.ERROR_MESSAGE);  
       
         }

     
     
      }
     }   
    }//GEN-LAST:event_txtlnameKeyReleased

    private void txtfnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfnameKeyReleased
// TODO add your handling code here:
       String s=txtfname.getText();
       if(!(s.equals("")))
       {   
        int a=s.length()-1;
        int j=(int)s.charAt(a);
        if(!((j>64&&j<91)||(j>95&&j<123)))
        {
            JOptionPane.showMessageDialog(this,"Enter only letter");
            txtfname.setText("");
        } 
        else
        {
         int i;       
        t2=txtmname.getText().trim();
        t1=txtfname.getText().trim();
        t1.trim();
        t3=txtlname.getText().trim();
        t4=txtcode.getText().trim();
                        
        Vector columnnames=new Vector();
          Vector data=new Vector();

             try
       {
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
         con=DriverManager.getConnection("jdbc:odbc:rock");
   
         Statement st=con.createStatement();
        
         ResultSet rs=st.executeQuery("select fname as F_Name,mname as M_Name,lname as L_Name,code as Code,gender as Gender,contact as Contact,address as Address from register where fname like '"+t1+"%' and mname like '"+t2+"%' and lname like '"+t3+"%' and code like '"+t4+"%'");
         
         ResultSetMetaData md=rs.getMetaData();
         int columns=md.getColumnCount();
         for(i=1;i<=columns;i++)
          {
             columnnames.addElement(md.getColumnName(i));
          }
         while(rs.next())
          {
           Vector row=new Vector(columns);
           for(i=1;i<=columns;i++)
             {
              row.addElement(rs.getObject(i));
             }
           data.addElement(row);
          }
           jTable4=new JTable(data,columnnames);
      jScrollPane4=new JScrollPane(jTable4); 
      jTable1.setCellEditor(jTable4.getCellEditor());
      jScrollPane1.setViewportView(jTable4);
      if(data.isEmpty()==true){
      JOptionPane.showMessageDialog(this,"there is no data available");
         txtfname.setText("");
       txtmname.setText("");
       txtlname.setText("");
       txtcode.setText("");
              }
         
         st.close();
        con.close();
        } catch(SQLException sq)
         {
              JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);   
         
         } 
         catch(Exception e)
         {
          JOptionPane.showMessageDialog(this,"There Is Error Occur ","Error",JOptionPane.ERROR_MESSAGE);  
    
         }

    
     }
    }    
    }//GEN-LAST:event_txtfnameKeyReleased

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
// TODO add your handling code here:
   cd.dispose();
   this.dispose();   

    }//GEN-LAST:event_btnbackActionPerformed

    private void btnopenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnopenActionPerformed
    // TODO add your handling code here:
       
    String s="";
    int i=jTable4.getSelectedRow();
    int j=jTable4.getSelectedColumn();   
    if(i < 0 && j < 0)
    {
     JOptionPane.showMessageDialog(this,"No Record Selected");
    }
    else
    {
    
    Object o=jTable4.getValueAt(i,3);
    s=o.toString();
    
  
           try{
             
                   Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
        con=DriverManager.getConnection("jdbc:odbc:rock");
        Statement st=con.createStatement();
         ResultSet rs=st.executeQuery("select age,fname,mname,lname,gender,code,allergy from register where code='"+s+"'");
         while(rs.next())
          {
         
            age=rs.getInt("age");
            fname=rs.getString("fname");
           mname=rs.getString("mname");
            lname=rs.getString("lname");
           
            gender=rs.getString("gender");
            
      
            code=rs.getString("code");
            allergy=rs.getString("allergy");
            name=fname+" "+mname+" "+lname;
            
            if(cdvi==false)
             {  
              cd=new card(code,name,gender,allergy,age);  
              cd.setVisible(true);
              cdvi=true;
             }
            else
            {
             cdvi=cd.isVisible();
             if(cdvi==false)
             { 
              cd=new card(code,name,gender,allergy,age);   
              cd.setVisible(true);
              cdvi=true;
             }
             else
             {
              cd.requestFocus();  
             }    
            }  
    
          }
         st.close();
        con.close();
        }
           catch(SQLException sq)
         {
              JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);   
            
         } 
         catch(Exception e)
         {
          JOptionPane.showMessageDialog(this,"There Is  Error Occur ","Error",JOptionPane.ERROR_MESSAGE);  
         
         }  
   }   
  
    }//GEN-LAST:event_btnopenActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
         int i;
          
        t2=txtmname.getText().trim();
        t1=txtfname.getText().trim();
        t3=txtlname.getText().trim();
        t4=txtcode.getText().trim();
                        
        Vector columnnames=new Vector();
          Vector data=new Vector();
    
             try
       {
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
         con=DriverManager.getConnection("jdbc:odbc:rock");
  
    
         Statement st=con.createStatement();
           
         ResultSet rs=st.executeQuery("select fname,mname,lname,code,gender,contact,address from register");
         
         ResultSetMetaData md=rs.getMetaData();
         int columns=md.getColumnCount();
         for(i=1;i<=columns;i++)
          {
             columnnames.addElement(md.getColumnName(i));
          }
         while(rs.next())
          {
           Vector row=new Vector(columns);
           for(i=1;i<=columns;i++)
             {
              row.addElement(rs.getObject(i));
             }
           data.addElement(row);
          }
         
      jTable4=new JTable(data,columnnames);
      jScrollPane4=new JScrollPane(jTable4);
      jTable1.setCellEditor(jTable4.getCellEditor());
      jScrollPane1.setViewportView(jTable4);

      if(data.isEmpty()==true){
      JOptionPane.showMessageDialog(this,"Patient's record not exist","Search",JOptionPane.ERROR_MESSAGE);
       txtfname.setText("");
       txtmname.setText("");
       txtlname.setText("");
       txtcode.setText("");
       this.dispose();
              }
         
         st.close();
        con.close();
        } catch(SQLException sq)
         {
              JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);   
              this.dispose(); 
         } 
         catch(Exception e)
         {
          JOptionPane.showMessageDialog(this,"There Is Error Occur ","Error",JOptionPane.ERROR_MESSAGE);  
          this.dispose();
         }

        
        
    }//GEN-LAST:event_formWindowActivated

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        t2=txtmname.getText().trim();
        t1=txtfname.getText().trim();
        t3=txtlname.getText().trim();
        t4=txtcode.getText().trim();
        if(!(t1.equals(""))||!(t2.equals(""))||!(t3.equals(""))||!(t4.equals("")))
        {   
         txtfname.setText("");
         txtmname.setText("");
         txtlname.setText("");
         txtcode.setText("");
        }
        else
        {
         JOptionPane.showMessageDialog(this,"All field empty");   
        }    
    }//GEN-LAST:event_btnclearActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:

    }//GEN-LAST:event_formWindowOpened
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new search().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnopen;
    private javax.swing.JButton btnshow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblcode;
    private javax.swing.JLabel lblfname;
    private javax.swing.JLabel lbllname;
    private javax.swing.JLabel lblmname;
    private javax.swing.JTextField txtcode;
    private javax.swing.JTextField txtfname;
    private javax.swing.JTextField txtlname;
    private javax.swing.JTextField txtmname;
    // End of variables declaration//GEN-END:variables
    
}
