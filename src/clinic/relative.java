/*
 * relative.java
 *
 * Created on March 2, 2012, 8:13 PM
 */

package clinic;

/**
 *
 * @author  Administrator
 */

//import java.awt.event.ActionEvent;
import java.util.Vector;
import javax.swing.*;
import java.sql.*;
//import javax.swing.table.TableModel;


public class relative extends javax.swing.JFrame {
    
    /** Creates new form relative */
    
           JTable jTable4;
    JScrollPane jScrollPane4; 
    String t1,t2,t3,t4;
      Connection con;
    
    public relative() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        txtfname = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtmname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtlname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnok = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Relatives");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setForeground(java.awt.Color.white);

        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jTable1.setForeground(java.awt.Color.white);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "F-NAME", "M-NAME", "L-NAME", "CODE", "CONTACT", "ADDRESS"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtfname.setFont(new java.awt.Font("Times New Roman", 0, 14));
        txtfname.setName("txtfname"); // NOI18N
        txtfname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfnameKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel1.setText("F-Name");

        txtmname.setFont(new java.awt.Font("Times New Roman", 0, 14));
        txtmname.setName("txtmname"); // NOI18N
        txtmname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtmnameKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel2.setText("M-Name");

        txtlname.setFont(new java.awt.Font("Times New Roman", 0, 14));
        txtlname.setName("txtlname"); // NOI18N
        txtlname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtlnameKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel3.setText("L-Name");

        btnok.setFont(new java.awt.Font("Times New Roman", 0, 14));
        btnok.setText("OK");
        btnok.setName("btnok"); // NOI18N
        btnok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnokActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Times New Roman", 0, 14));
        btnClear.setText("CLEAR");
        btnClear.setName("btnclear"); // NOI18N
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(60, Short.MAX_VALUE)
                        .add(jLabel1)
                        .add(85, 85, 85))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(38, 38, 38)
                        .add(txtfname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(30, 30, 30)
                        .add(jLabel2))
                    .add(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtmname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(27, 27, 27)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtlname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 134, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(34, 34, 34)
                        .add(btnok, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(btnClear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(16, 16, 16)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(46, 46, 46)
                        .add(jLabel3)))
                .add(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtfname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel1))
                    .add(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtmname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel2))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(txtlname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(btnClear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(btnok, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel3)))
                .add(25, 25, 25))
        );

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 36));
        jLabel4.setForeground(new java.awt.Color(0, 153, 0));
        jLabel4.setText("RELATIVES");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(66, 66, 66)
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(296, 296, 296)
                        .add(jLabel4))
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 987, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel4)
                .add(25, 25, 25)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
// TODO add your handling code here:
        
        
         int i;
          
        t2=txtmname.getText().trim();
        t1=txtfname.getText().trim();
        t3=txtlname.getText().trim();
     
                        
        Vector columnnames=new Vector();
          Vector data=new Vector();
   
             try
       {
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
         con=DriverManager.getConnection("jdbc:odbc:rock");
    
    
         Statement st=con.createStatement();
           
         ResultSet rs=st.executeQuery("select fname,mname,lname,code,gender,contact,address from register");
         
         ResultSetMetaData md=rs.getMetaData();
         int columns=md.getColumnCount();
         for(i=1;i<=columns;i++)
          {
             columnnames.addElement(md.getColumnName(i));
          }
         while(rs.next())
          {
           Vector row=new Vector(columns);
           for(i=1;i<=columns;i++)
             {
              row.addElement(rs.getObject(i));
             }
           data.addElement(row);
          }
         
           jTable4=new JTable(data,columnnames);
      jScrollPane4=new JScrollPane(jTable4);
      jTable1.setCellEditor(jTable4.getCellEditor());
      jScrollPane1.setViewportView(jTable4);

      if(data.isEmpty()==true){
       JOptionPane.showMessageDialog(this,"there is no data available");
       this.dispose();
         txtfname.setText("");
       txtmname.setText("");
       txtlname.setText("");
    
              }
         st.close();
        con.close();
        } catch(SQLException sq)
         {
            JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);
            this.dispose();
         } 
               catch(Exception e)
         {
         JOptionPane.showMessageDialog(this,"Error");
          this.dispose();
         }

    
        
        
    }//GEN-LAST:event_formWindowActivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnokActionPerformed
// TODO add your handling code here:
       String s="";
    int i=jTable4.getSelectedRow();
    int j=jTable4.getSelectedColumn();   
    if(i < 0 && j < 0)
    {
     JOptionPane.showMessageDialog(this,"No Record Selected");
    }
    else
    {
    Object o=jTable4.getValueAt(i,3);
    s=o.toString();
    try
       {
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
         con=DriverManager.getConnection("jdbc:odbc:rock");
     
         Statement st=con.createStatement();
          int v=st.executeUpdate("insert into refer values('"+s+"')");
         st.close();
        con.close();
       }catch(SQLException sq)
         {
            JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);
            this.dispose();
         } 
               catch(Exception e)
         {
         JOptionPane.showMessageDialog(this,"Error");
          this.dispose();
         }
      
      this.dispose();
    }
          
      
       
        
    }//GEN-LAST:event_btnokActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
// TODO add your handling code here:
        txtfname.setText("");
        txtmname.setText("");
        txtlname.setText("");
        
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtlnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtlnameKeyReleased
// TODO add your handling code here:
       
         String s=txtlname.getText();
        int a=s.length()-1;
        int j=(int)s.charAt(a);
        if(!((j>64&&j<91)||(j>95&&j<123)))
        {
            JOptionPane.showMessageDialog(this,"Enter only letter");
            txtlname.setText("");
        }
        
        
        
        int i;
          
        t3=txtlname.getText().trim();
        t1=txtfname.getText().trim();
         t2=txtmname.getText().trim();
        t3.trim();
        Vector columnnames=new Vector();
          Vector data=new Vector();
  
             try
       {
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
         con=DriverManager.getConnection("jdbc:odbc:rock");
     
         Statement st=con.createStatement();
           
         ResultSet rs=st.executeQuery("select fname,mname,lname,code,gender,contact,address from register where lname like '"+t3+"%' and mname like '"+t2+"%' and fname like '"+t1+"%'");
         
         ResultSetMetaData md=rs.getMetaData();
         int columns=md.getColumnCount();
         for(i=1;i<=columns;i++)
          {
             columnnames.addElement(md.getColumnName(i));
          }
         while(rs.next())
          {
           Vector row=new Vector(columns);
           for(i=1;i<=columns;i++)
             {
              row.addElement(rs.getObject(i));
             }
           data.addElement(row);
          }
         
           jTable4=new JTable(data,columnnames);
      jScrollPane4=new JScrollPane(jTable4);
      jTable1.setCellEditor(jTable4.getCellEditor());
      jScrollPane1.setViewportView(jTable4);

      if(data.isEmpty()==true){
       JOptionPane.showMessageDialog(this,"there is no data available");
         txtlname.setText("");
       }
         st.close();
        con.close();
   
        }catch(SQLException sq)
         {
            JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);
         
         } 
               catch(Exception e)
         {
         JOptionPane.showMessageDialog(this,"Error");
        
         }

    
        
        
    }//GEN-LAST:event_txtlnameKeyReleased

    private void txtmnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmnameKeyReleased
// TODO add your handling code here:
        String s=txtmname.getText();
        int a=s.length()-1;
        int j=(int)s.charAt(a);
        if(!((j>64&&j<91)||(j>95&&j<123)))
        {
            JOptionPane.showMessageDialog(this,"Enter only letter");
            txtmname.setText("");
        }
        
        
        
        int i;
          
        t2=txtmname.getText().trim();
        t1=txtfname.getText().trim();
        t3=txtlname.getText().trim();
        t2.trim();
        Vector columnnames=new Vector();
          Vector data=new Vector();
  
             try
       {
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
         con=DriverManager.getConnection("jdbc:odbc:rock");
   
         Statement st=con.createStatement();
           
         ResultSet rs=st.executeQuery("select fname,mname,lname,code,gender,contact,address from register where mname like '"+t2+"%' and fname like '"+t1+"%' and lname like '"+t3+"%'");
         
         ResultSetMetaData md=rs.getMetaData();
         int columns=md.getColumnCount();
         for(i=1;i<=columns;i++)
          {
             columnnames.addElement(md.getColumnName(i));
          }
         while(rs.next())
          {
           Vector row=new Vector(columns);
           for(i=1;i<=columns;i++)
             {
              row.addElement(rs.getObject(i));
             }
           data.addElement(row);
          }
         
           jTable4=new JTable(data,columnnames);
      jScrollPane4=new JScrollPane(jTable4);
      jTable1.setCellEditor(jTable4.getCellEditor());
      jScrollPane1.setViewportView(jTable4);

      if(data.isEmpty()==true){
       JOptionPane.showMessageDialog(this,"there is no data available");
         txtmname.setText("");
       }
         st.close();
        con.close();
     
        }catch(SQLException sq)
         {
            JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);
         
         } 
               catch(Exception e)
         {
         JOptionPane.showMessageDialog(this,"Error");
        
         }

    
        
    }//GEN-LAST:event_txtmnameKeyReleased

    private void txtfnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfnameKeyReleased
// TODO add your handling code here:
                 String s=txtfname.getText();
        int a=s.length()-1;
        int j=(int)s.charAt(a);
        if(!((j>64&&j<91)||(j>95&&j<123)))
        {
            JOptionPane.showMessageDialog(this,"Enter only letter");
            txtfname.setText("");
        }
        
        
        
                 int i;
          
        t1=txtfname.getText().trim();
        t3=txtlname.getText().trim();
        t2=txtmname.getText().trim();
        
        t1.trim();
        Vector columnnames=new Vector();
          Vector data=new Vector();
      
             try
       {
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
         con=DriverManager.getConnection("jdbc:odbc:rock");
    
         Statement st=con.createStatement();
           
         ResultSet rs=st.executeQuery("select fname,mname,lname,code,gender,contact,address from register where fname like '"+t1+"%' and mname like '"+t2+"%' and lname like '"+t3+"%'");
         
         ResultSetMetaData md=rs.getMetaData();
         int columns=md.getColumnCount();
         for(i=1;i<=columns;i++)
          {
             columnnames.addElement(md.getColumnName(i));
          }
         while(rs.next())
          {
           Vector row=new Vector(columns);
           for(i=1;i<=columns;i++)
             {
              row.addElement(rs.getObject(i));
             }
           data.addElement(row);
          }
         
          jTable4=new JTable(data,columnnames);
      jScrollPane4=new JScrollPane(jTable4);
      jTable1.setCellEditor(jTable4.getCellEditor());
      jScrollPane1.setViewportView(jTable4);

      if(data.isEmpty()==true){
       JOptionPane.showMessageDialog(this,"there is no data available");
         txtfname.setText("");
       }
         st.close();
        con.close();
      
        }catch(SQLException sq)
         {
            JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);
         
         } 
               catch(Exception e)
         {
         JOptionPane.showMessageDialog(this,"Error");
        
         }

     
        
    }//GEN-LAST:event_txtfnameKeyReleased
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new relative().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    public javax.swing.JButton btnok;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtfname;
    private javax.swing.JTextField txtlname;
    private javax.swing.JTextField txtmname;
    // End of variables declaration//GEN-END:variables
    
}
