/*
 * addtablet.java
 *
 * Created on July 9, 2012, 9:09 PM
 */

package clinic;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.*;
import javax.swing.*;
/**
 *
 * @author  Amir Sanas
 */
public class addtablet extends javax.swing.JFrame {
    Connection con;
    int numn=0;
    Statement st;
    ResultSet rs;
    /** Creates new form addtablet */
    public addtablet() {
        initComponents();

    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlinventory = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtprice = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtquantity = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbomonth = new javax.swing.JComboBox();
        cboyear = new javax.swing.JComboBox();
        btnsave = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        cboname = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        btninventory = new javax.swing.JRadioButton();
        btnentry = new javax.swing.JRadioButton();
        btnupdate = new javax.swing.JRadioButton();
        pnlentry = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnbback = new javax.swing.JButton();
        txttname = new javax.swing.JTextField();
        pnlupdate = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        btnok = new javax.swing.JButton();
        btnbackk = new javax.swing.JButton();
        txttnname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cbotablet = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tablet Entry");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlinventory.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlinventory.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pnlinventoryFocusLost(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel1.setText("Name");

        txtprice.setFont(new java.awt.Font("Times New Roman", 0, 14));
        txtprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpriceKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel2.setText("Price");

        txtquantity.setFont(new java.awt.Font("Times New Roman", 0, 14));
        txtquantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtquantityKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel3.setText("Quantity");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel4.setText("Expire Date");

        cbomonth.setFont(new java.awt.Font("Times New Roman", 0, 14));
        cbomonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));

        cboyear.setFont(new java.awt.Font("Times New Roman", 0, 14));
        cboyear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));

        btnsave.setFont(new java.awt.Font("Times New Roman", 0, 14));
        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btnback.setFont(new java.awt.Font("Times New Roman", 0, 14));
        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnlinventoryLayout = new org.jdesktop.layout.GroupLayout(pnlinventory);
        pnlinventory.setLayout(pnlinventoryLayout);
        pnlinventoryLayout.setHorizontalGroup(
            pnlinventoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlinventoryLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlinventoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlinventoryLayout.createSequentialGroup()
                        .add(16, 16, 16)
                        .add(pnlinventoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel4)
                            .add(jLabel2)
                            .add(jLabel1)
                            .add(jLabel3))
                        .add(30, 30, 30)
                        .add(pnlinventoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(cboname, 0, 155, Short.MAX_VALUE)
                            .add(txtquantity, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                            .add(pnlinventoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(pnlinventoryLayout.createSequentialGroup()
                                    .add(cbomonth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(cboyear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(txtprice))))
                    .add(pnlinventoryLayout.createSequentialGroup()
                        .add(btnsave, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(45, 45, 45)
                        .add(btnback, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlinventoryLayout.setVerticalGroup(
            pnlinventoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnlinventoryLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlinventoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(cboname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 21, Short.MAX_VALUE)
                .add(pnlinventoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(txtprice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(33, 33, 33)
                .add(pnlinventoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(txtquantity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .add(36, 36, 36)
                .add(pnlinventoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel4)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, pnlinventoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(cbomonth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(cboyear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(63, 63, 63)
                .add(pnlinventoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnsave, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnback, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btninventory.setFont(new java.awt.Font("Times New Roman", 0, 14));
        btninventory.setText("Inventory");
        btninventory.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        btninventory.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btninventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btninventoryActionPerformed(evt);
            }
        });

        btnentry.setFont(new java.awt.Font("Times New Roman", 0, 14));
        btnentry.setText("Entry");
        btnentry.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        btnentry.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnentry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnentryActionPerformed(evt);
            }
        });

        btnupdate.setFont(new java.awt.Font("Times New Roman", 0, 14));
        btnupdate.setText("Update");
        btnupdate.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        btnupdate.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(28, 28, 28)
                .add(btninventory)
                .add(41, 41, 41)
                .add(btnentry)
                .add(45, 45, 45)
                .add(btnupdate)
                .addContainerGap(74, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(22, 22, 22)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnentry)
                    .add(btnupdate)
                    .add(btninventory))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pnlentry.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel5.setText("Name Of Tablet");

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnbback.setFont(new java.awt.Font("Times New Roman", 0, 14));
        btnbback.setText("Back");
        btnbback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbbackActionPerformed(evt);
            }
        });

        txttname.setFont(new java.awt.Font("Times New Roman", 0, 14));

        org.jdesktop.layout.GroupLayout pnlentryLayout = new org.jdesktop.layout.GroupLayout(pnlentry);
        pnlentry.setLayout(pnlentryLayout);
        pnlentryLayout.setHorizontalGroup(
            pnlentryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlentryLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlentryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel5)
                    .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(pnlentryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlentryLayout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(txttname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(pnlentryLayout.createSequentialGroup()
                        .add(39, 39, 39)
                        .add(btnbback, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        pnlentryLayout.setVerticalGroup(
            pnlentryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlentryLayout.createSequentialGroup()
                .add(32, 32, 32)
                .add(pnlentryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(txttname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(49, 49, 49)
                .add(pnlentryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnbback, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pnlupdate.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel6.setText("New Name");

        btnok.setFont(new java.awt.Font("Times New Roman", 0, 14));
        btnok.setText("Update");
        btnok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnokActionPerformed(evt);
            }
        });

        btnbackk.setFont(new java.awt.Font("Times New Roman", 0, 14));
        btnbackk.setText("Back");
        btnbackk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackkActionPerformed(evt);
            }
        });

        txttnname.setFont(new java.awt.Font("Times New Roman", 0, 14));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel7.setText("Old Name");

        cbotablet.setFont(new java.awt.Font("Times New Roman", 0, 14));

        org.jdesktop.layout.GroupLayout pnlupdateLayout = new org.jdesktop.layout.GroupLayout(pnlupdate);
        pnlupdate.setLayout(pnlupdateLayout);
        pnlupdateLayout.setHorizontalGroup(
            pnlupdateLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlupdateLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlupdateLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlupdateLayout.createSequentialGroup()
                        .add(btnok, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(38, 38, 38)
                        .add(btnbackk, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(pnlupdateLayout.createSequentialGroup()
                        .add(jLabel7)
                        .add(38, 38, 38)
                        .add(cbotablet, 0, 180, Short.MAX_VALUE))
                    .add(pnlupdateLayout.createSequentialGroup()
                        .add(jLabel6)
                        .add(31, 31, 31)
                        .add(txttnname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlupdateLayout.setVerticalGroup(
            pnlupdateLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnlupdateLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlupdateLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(cbotablet, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 17, Short.MAX_VALUE)
                .add(pnlupdateLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(txttnname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(30, 30, 30)
                .add(pnlupdateLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnok, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnbackk, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 36));
        jLabel8.setForeground(new java.awt.Color(0, 102, 0));
        jLabel8.setText("TABLET");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(pnlinventory, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(pnlupdate, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(pnlentry, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(layout.createSequentialGroup()
                                .add(44, 44, 44)
                                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(layout.createSequentialGroup()
                        .add(192, 192, 192)
                        .add(jLabel8)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel8)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(17, 17, 17)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(pnlinventory, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(pnlentry, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnlupdate, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pnlinventoryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pnlinventoryFocusLost
// TODO add your handling code here:
        
    }//GEN-LAST:event_pnlinventoryFocusLost

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
// TODO add your handling code here:
     
     
    }//GEN-LAST:event_formWindowDeactivated

    private void txtquantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtquantityKeyReleased
// TODO add your handling code here:
            
        String s=txtquantity.getText();
        if(!(s.equals("")))
        {
         int a=s.length()-1;
         int i=(int)s.charAt(a);
         if(!(i>47&&i<58))
        {
            JOptionPane.showMessageDialog(this,"Enter only number","Warning",JOptionPane.WARNING_MESSAGE);
            txtquantity.setText("");

         }

       
       }    
        
    }//GEN-LAST:event_txtquantityKeyReleased

    private void txtpriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpriceKeyReleased
// TODO add your handling code here:
        
        String s=txtprice.getText();
        if(!(s.equals("")))
        {
         int a=s.length()-1;
         int i=(int)s.charAt(a);
         if(!(i>47&&i<58))
        {
            JOptionPane.showMessageDialog(this,"Enter Only Number","Warning",JOptionPane.WARNING_MESSAGE);
            txtprice.setText("");

         }

       
       }
    }//GEN-LAST:event_txtpriceKeyReleased

    private void btnbackkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackkActionPerformed
// TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnbackkActionPerformed

    private void btnokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnokActionPerformed
// TODO add your handling code here:
        
       String s,p;
       s=(String)cbotablet.getSelectedItem();
       p=txttnname.getText();
           
 
        if(p.equals(""))
        {
         JOptionPane.showMessageDialog(this,"First Enter The Name");
        }
        else
        {  
          try
             {
               Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
               con=DriverManager.getConnection("jdbc:odbc:rock");
               st=con.createStatement();
               int k=st.executeUpdate("update tablet set name='"+p+"' where name='"+s+"'");  
               txttnname.setText("");
               cbotablet.removeAllItems();
               ResultSet rs1=st.executeQuery("select name from tablet");
               while(rs1.next())
                {
                 String tname=rs1.getString("name");
                 cbotablet.addItem(tname);
                }
               JOptionPane.showMessageDialog(this,"data saved");
               st.close();
               con.close();
             }
             catch(SQLException sq)
             {
              JOptionPane.showMessageDialog(this,"Database Error","Tablet",JOptionPane.ERROR_MESSAGE);   
             }          
              catch(Exception e)
              {
                JOptionPane.showMessageDialog(this,"error occur"+e);   
              } 
         }
       
    }//GEN-LAST:event_btnokActionPerformed

    private void btnbbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbbackActionPerformed
// TODO add your handling code here:
        
        this.dispose();
    }//GEN-LAST:event_btnbbackActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
      String s;   
      int conam=0;
         s=txttname.getText();

        if(s.equals(""))
        {
         JOptionPane.showMessageDialog(this,"First Enter The Name");
        }
        else
        {
         try
         {    
           try
           {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            con=DriverManager.getConnection("jdbc:odbc:rock");
            st=con.createStatement();
            ResultSet rs1=st.executeQuery("Select count(name) from tablet where name='"+s+"'");
            while(rs1.next())
            {
             conam=rs1.getInt(1); 
            }
            if(conam<1)
            {   
             int k=st.executeUpdate("insert into tablet values(convert(varchar(12),getdate(),106),'"+s+"',0,0,null)");       
             JOptionPane.showMessageDialog(this,"Medicine "+s+" added");
             txttname.setText("");
            }
            else
            {
            JOptionPane.showMessageDialog(this,"Medicine Name Already Exit ","Error",JOptionPane.WARNING_MESSAGE);   
            txttname.setText("");    
            }    
            st.close();
            con.close();
           }
           catch(SQLException ex)
           {
            JOptionPane.showMessageDialog(this,"Database Error","Tablet",JOptionPane.WARNING_MESSAGE);   
            txttname.setText(""); 
           } 
         }   
         catch(Exception e)
           {
            JOptionPane.showMessageDialog(this,"error occur"+e);   
           } 
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
// TODO add your handling code here:
     
        
    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
// TODO add your handling code here:
    try
             {
               Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
               con=DriverManager.getConnection("jdbc:odbc:rock");
               st=con.createStatement();
              ResultSet rs1=st.executeQuery("select count(name) from tablet");
               while(rs1.next())
                {
                 numn=rs1.getInt(1); 
                }
               if(numn==0)
               {
                  pnlinventory.setVisible(false);
                  btninventory.setSelected(false);
                  pnlentry.setVisible(true);
                  btnentry.setSelected(true);
                  pnlupdate.setVisible(false);  
                  btnupdate.setSelected(false);  
                  JOptionPane.showMessageDialog(this,"There Is No Tablet Available");
               }     
               else
               {
                  pnlinventory.setVisible(true);
                  btninventory.setSelected(true);
                  pnlentry.setVisible(false);
                  btnentry.setSelected(false);
                  pnlupdate.setVisible(false);  
                  btnupdate.setSelected(false);
        
                  int numname=0;
                  pnlinventory.setVisible(true);
                  btninventory.setSelected(true);
                  pnlentry.setVisible(false);
                  btnentry.setSelected(false);
                  pnlupdate.setVisible(false);  
                  btnupdate.setSelected(false);
                  cboname.removeAllItems();
                  cbotablet.removeAllItems();                  
                  ResultSet rs2=st.executeQuery("select name from tablet");
                  while(rs2.next())
                       {
                        String tname=rs2.getString("name");
                        cboname.addItem(tname);
                        cbotablet.addItem(tname);
                       }                   
                }    
              
               st.close();
               con.close();
             }   catch(SQLException sq)
             {
              JOptionPane.showMessageDialog(this,"Database Error","Tablet",JOptionPane.ERROR_MESSAGE);
              this.dispose();
             } 
              catch(Exception e)
              {
                JOptionPane.showMessageDialog(this,"error occur"+e); 
                this.dispose();
              }      

         
    }//GEN-LAST:event_formWindowOpened

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
// TODO add your handling code here:
        int couname=0;
        pnlinventory.setVisible(false);
        btninventory.setSelected(false);
        pnlentry.setVisible(false);
        btnentry.setSelected(false);
        pnlupdate.setVisible(true);  
        btnupdate.setSelected(true); 
     
        cbotablet.removeAllItems();  
           try
        {
          Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
           con=DriverManager.getConnection("jdbc:odbc:rock");
           st=con.createStatement();                               
          ResultSet rs2=st.executeQuery("select count(name) from tablet");
          while(rs2.next())
          {
              couname=rs2.getInt(1);
          } 
          if(couname>0)
          {    
           ResultSet rs1=st.executeQuery("select name from tablet");
           
           while(rs1.next())
           {
             String tname=rs1.getString("name");
             
             cbotablet.addItem(tname);
            }
          }
          else
          {
              JOptionPane.showMessageDialog(this,"Tablet Not Available");
              pnlinventory.setVisible(false);
              btninventory.setSelected(false);
              pnlentry.setVisible(true);
              btnentry.setSelected(true);
              pnlupdate.setVisible(false);  
               btnupdate.setSelected(false);
          }    
          st.close();
          con.close();
         }
              catch(SQLException sq)
             {
              JOptionPane.showMessageDialog(this,"Database Error","Tablet",JOptionPane.ERROR_MESSAGE);   
             } 
           catch(Exception e)
         {
          JOptionPane.showMessageDialog(this,"error"+e);
          }
        
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btnentryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnentryActionPerformed
// TODO add your handling code here:
        pnlinventory.setVisible(false);
        btninventory.setSelected(false);
        pnlentry.setVisible(true);
        btnentry.setSelected(true);
        pnlupdate.setVisible(false);  
        btnupdate.setSelected(false);
    }//GEN-LAST:event_btnentryActionPerformed

    private void btninventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btninventoryActionPerformed
// TODO add your handling code here:
        pnlinventory.setVisible(true);
        btninventory.setSelected(true);
        pnlentry.setVisible(false);
        btnentry.setSelected(false);
        pnlupdate.setVisible(false);  
        btnupdate.setSelected(false);
        int couname=0;
                 int numname=0;
           pnlinventory.setVisible(true);
        btninventory.setSelected(true);
        pnlentry.setVisible(false);
        btnentry.setSelected(false);
        pnlupdate.setVisible(false);  
        btnupdate.setSelected(false);
        cboname.removeAllItems();
      
        try
        {
          Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
           con=DriverManager.getConnection("jdbc:odbc:rock");
           st=con.createStatement();                                     
           ResultSet rs2=st.executeQuery("select count(name) from tablet");
          while(rs2.next())
          {
              couname=rs2.getInt(1);
          } 
          if(couname>0)
          {    
           ResultSet rs1=st.executeQuery("select name from tablet");
           
           while(rs1.next())
           {
             String tname=rs1.getString("name");
             
             cboname.addItem(tname);
            }
          }
          else
          {
              JOptionPane.showMessageDialog(this,"Tablet Not Available");
              pnlinventory.setVisible(false);
              btninventory.setSelected(false);
              pnlentry.setVisible(true);
              btnentry.setSelected(true);
              pnlupdate.setVisible(false);  
               btnupdate.setSelected(false);
          }
            
            
          st.close();
          con.close();
         }   catch(SQLException sq)
             {
              JOptionPane.showMessageDialog(this,"Database Error","Tablet",JOptionPane.ERROR_MESSAGE);   
             } 
           catch(Exception e)
         {
          JOptionPane.showMessageDialog(this,"error"+e);
          }
      
        
    }//GEN-LAST:event_btninventoryActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
// TODO add your handling code here:
        
        this.dispose();
    }//GEN-LAST:event_btnbackActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
// TODO add your handling code here:
       int uptotal=0;
        String m,n,o,p,name="",dat="",datea="",equal="+";
        int i=0,j=0,price=0,quantity=0,k,k1,couname=0,total=0,quan=0;
           String a,b;
               a=txtprice.getText();
       b=txtquantity.getText();
       
        m=(String)cboname.getSelectedItem();
    
        n=(String)cbomonth.getSelectedItem();
        o=(String)cboyear.getSelectedItem();
        p="1-"+n+"-"+o;
        

       
        if(a.equals("")|| b.equals(""))
        {
         JOptionPane.showMessageDialog(this,"All field must be required");
        }
        else
        {
        try
      { 
        
       i=Integer.parseInt(txtprice.getText());
        j=Integer.parseInt(txtquantity.getText());
        total=i*j;
       Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
       con=DriverManager.getConnection("jdbc:odbc:rock");
       st=con.createStatement();
       rs=st.executeQuery("select price,quantity,convert(varchar(12),dates,106) from tablet where name='"+m+"'");  
     
        while(rs.next())
        {
          price=rs.getInt("price");
          quantity=rs.getInt("quantity");  
          dat=rs.getString(3);
        }
          int j1;
        j1=quantity+j;
        ResultSet rsss=st.executeQuery("select getDate()");
        while(rsss.next())
        {
            datea=rsss.getString(1);
        }    
       
        ResultSet rs2=st.executeQuery("select count(name) from tablet where name='"+m+"' and quantity="+quan+"");
        while(rs2.next())
        {
         couname=rs2.getInt(1);
        }  
      
        if(couname==1)
        {
         k=st.executeUpdate("update tablet set cudate=convert(varchar(12),getdate(),106),quantity="+j1+", price="+i+",dates='"+p+"' where name='"+m+"' and '"+p+"'>dateadd(m,+4,getdate())"); 
         if(k==1)
         {    
         JOptionPane.showMessageDialog(this,"Entry of "+m+" Medicine Detail Successful"); 
         }
         else
         {
              JOptionPane.showMessageDialog(this,"Expiry Month Is Less Than 4 Month From Current Month  ","Error",JOptionPane.WARNING_MESSAGE);
         }
        }
        else
        {    
         int ex=JOptionPane.showConfirmDialog(this,"Click on Yes for overwrite "+m+" detail \n" +
                 "Click on No for Enter new "+m+" detail \n"+
                 "current time "+quantity+" quantity of "+m+" is available\n "+
                 "Which expiry date is "+dat ,"Information",JOptionPane.YES_NO_CANCEL_OPTION);  
         if(ex==0)
         {    
          k=st.executeUpdate("update tablet set cudate=convert(varchar(12),getdate(),106),quantity="+j1+", price="+i+",dates='"+p+"' where name='"+m+"' and '"+p+"'>dateadd(m,+4,getdate())");      
          if(k==1)
          {
          JOptionPane.showMessageDialog(this,"Medicine "+m+" detail updated ");       
          }
          else
           {
              JOptionPane.showMessageDialog(this,"Expiry month is less than 4 month from current month ","Error",JOptionPane.WARNING_MESSAGE); 
           }    
          }
         else if(ex==1)
          {  
             k=st.executeUpdate("update tablet set quantity="+j+", price="+i+",dates='"+p+"' where name='"+m+"' and '"+p+"'>dateadd(m,+4,getdate())");
             if(k==1)
             {    
              JOptionPane.showMessageDialog(this,"New record of medicine "+m+" is saved");
             }
             else
             {
                 JOptionPane.showMessageDialog(this,"Expiry month is less than 4 month from current month ","Error",JOptionPane.WARNING_MESSAGE); 
             }    
         } 
         else
         {
         } 
        }
        ResultSet rs3=st.executeQuery("select sum(price) from tablet where convert(varchar(12),cudate,106)=convert(varchar(12),getdate(),106)");
        while(rs3.next())
        {
           total=rs3.getInt(1);
        } 
        
         uptotal=st.executeUpdate("update personal set dates=convert(varchar(12),getdate(),106),amount="+total+" where dates=convert(varchar(12),getdate(),106) and member='medicine'");
        if(uptotal==0)
        {
           int intot=st.executeUpdate("insert into personal values(convert(varchar(12),getdate(),106),'medicine',"+total+")");
        } 
         
       
       txtprice.setText("");
       txtquantity.setText("");
       st.close();
       con.close();
     }   catch(SQLException sq)
             {
              JOptionPane.showMessageDialog(this,"Database Disconnected","Tablet",JOptionPane.ERROR_MESSAGE);   
             } 
        catch(Exception e)
         {
          JOptionPane.showMessageDialog(this,"error occur"+e);   
         } 
        
        
        }
        
    }//GEN-LAST:event_btnsaveActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addtablet().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnbackk;
    private javax.swing.JButton btnbback;
    private javax.swing.JRadioButton btnentry;
    private javax.swing.JRadioButton btninventory;
    private javax.swing.JButton btnok;
    private javax.swing.JButton btnsave;
    private javax.swing.JRadioButton btnupdate;
    private javax.swing.JComboBox cbomonth;
    private javax.swing.JComboBox cboname;
    private javax.swing.JComboBox cbotablet;
    private javax.swing.JComboBox cboyear;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel pnlentry;
    private javax.swing.JPanel pnlinventory;
    private javax.swing.JPanel pnlupdate;
    private javax.swing.JTextField txtprice;
    private javax.swing.JTextField txtquantity;
    private javax.swing.JTextField txttname;
    private javax.swing.JTextField txttnname;
    // End of variables declaration//GEN-END:variables
    
}
