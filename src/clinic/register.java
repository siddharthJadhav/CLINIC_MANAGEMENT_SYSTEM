/*
 * update_record.java
 *
 * Created on March 2, 2012, 12:07 PM
 */

package clinic;

/**
 *
 * @author  Administrator
 */

//import java.awt.event.ActionEvent;
import javax.swing.*;
import java.sql.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class register extends javax.swing.JFrame {
    
    /** Creates new form update_record */
    private Pattern pattern;
    private Matcher matcher;
    private static final String EMAIL_PATTERN = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@" + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
    
      String t9,t1,t2,t3,t4,t6,t7,t8,t10,t11,t12,t13,t14,t15,t16,t17,t18,t19;
     int t5=0,s4=0;
   preview p=new preview(t1,t2,t3,t18,t5,t6,t7,t8,t9,t10,t11,t12,t15,t19,t17);
    boolean rvi=p.isVisible();
    public register() {
        initComponents();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblpatient = new javax.swing.JLabel();
        lblfname = new javax.swing.JLabel();
        lblmname = new javax.swing.JLabel();
        lbllname = new javax.swing.JLabel();
        txtfname = new javax.swing.JTextField();
        txtmname = new javax.swing.JTextField();
        txtlname = new javax.swing.JTextField();
        lblename = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lbladdress = new javax.swing.JLabel();
        lblcontact = new javax.swing.JLabel();
        lblmail = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaddress = new javax.swing.JTextArea();
        txtcontact = new javax.swing.JTextField();
        txtmail = new javax.swing.JTextField();
        lbleaddress = new javax.swing.JLabel();
        lblecontact = new javax.swing.JLabel();
        emailValidationError = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lblcode = new javax.swing.JLabel();
        lblreference = new javax.swing.JLabel();
        lblrelation = new javax.swing.JLabel();
        btnfind = new javax.swing.JButton();
        cborelation = new javax.swing.JComboBox();
        txtcode = new javax.swing.JLabel();
        txtreference = new javax.swing.JLabel();
        btnexit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnsubmit = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblbirth = new javax.swing.JLabel();
        lblgender = new javax.swing.JLabel();
        lblage = new javax.swing.JLabel();
        lbloccupation = new javax.swing.JLabel();
        txtoccupation = new javax.swing.JTextField();
        txtage = new javax.swing.JTextField();
        cboyear = new javax.swing.JComboBox();
        cbomonth = new javax.swing.JComboBox();
        cboday = new javax.swing.JComboBox();
        cbogender = new javax.swing.JComboBox();
        lblyear = new javax.swing.JLabel();
        lblmonth = new javax.swing.JLabel();
        lblday = new javax.swing.JLabel();
        lbleage = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        lblallergy = new javax.swing.JLabel();
        txtallergy = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Register");
        setResizable(false);

        lblpatient.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblpatient.setText("Name Of Patient");
        lblpatient.setName("lblpatient"); // NOI18N

        lblfname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblfname.setText("F-Name");
        lblfname.setName("lblfname"); // NOI18N

        lblmname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblmname.setText("M-Name");
        lblmname.setName("lblmname"); // NOI18N

        lbllname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbllname.setText("L-Name");
        lbllname.setName("lbllname"); // NOI18N

        txtfname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtfname.setName("txtfname"); // NOI18N
        txtfname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfnameFocusLost(evt);
            }
        });
        txtfname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfnameKeyReleased(evt);
            }
        });

        txtmname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtmname.setName("txtmname"); // NOI18N
        txtmname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtmnameFocusLost(evt);
            }
        });
        txtmname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtmnameKeyReleased(evt);
            }
        });

        txtlname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtlname.setName("txtlname"); // NOI18N
        txtlname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtlnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtlnameFocusLost(evt);
            }
        });
        txtlname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtlnameKeyReleased(evt);
            }
        });

        lblename.setForeground(new java.awt.Color(204, 51, 0));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(lblpatient)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(22, 22, 22)
                        .add(txtfname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(14, 14, 14)
                        .add(txtmname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(txtlname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(65, 65, 65)
                        .add(lblfname)
                        .add(95, 95, 95)
                        .add(lblmname)
                        .add(123, 123, 123)
                        .add(lbllname)))
                .add(18, 18, 18)
                .add(lblename, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblpatient)
                    .add(txtfname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtlname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtmname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblename, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblfname)
                    .add(lblmname)
                    .add(lbllname))
                .add(150, 150, 150))
        );

        lbladdress.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbladdress.setText("Address");
        lbladdress.setName("lbladdress"); // NOI18N

        lblcontact.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblcontact.setText("Contact No.");
        lblcontact.setName("lblcontact"); // NOI18N

        lblmail.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblmail.setText("E-Mail");
        lblmail.setName("lblmail"); // NOI18N

        txtaddress.setColumns(20);
        txtaddress.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtaddress.setLineWrap(true);
        txtaddress.setRows(5);
        txtaddress.setTabSize(1);
        txtaddress.setName("txtaddress"); // NOI18N
        jScrollPane1.setViewportView(txtaddress);

        txtcontact.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtcontact.setName("txtcontact"); // NOI18N
        txtcontact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcontactActionPerformed(evt);
            }
        });
        txtcontact.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtcontactFocusLost(evt);
            }
        });
        txtcontact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcontactKeyReleased(evt);
            }
        });

        txtmail.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtmail.setName("txtmail"); // NOI18N

        lbleaddress.setForeground(new java.awt.Color(204, 51, 0));

        lblecontact.setForeground(new java.awt.Color(204, 51, 0));

        emailValidationError.setForeground(new java.awt.Color(204, 51, 0));
        emailValidationError.setText("");
        emailValidationError.setRequestFocusEnabled(false);

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(lbladdress)
                .add(74, 74, 74)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, lbleaddress, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblmail)
                    .add(lblcontact))
                .add(12, 12, 12)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(txtcontact, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(lblecontact, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 169, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(147, Short.MAX_VALUE))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(txtmail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 250, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(emailValidationError, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 169, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(10, 10, 10)
                                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel3Layout.createSequentialGroup()
                                        .add(10, 10, 10)))))
                        .add(18, 18, 18))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(35, 35, 35)
                .add(lbladdress))
            .add(jPanel3Layout.createSequentialGroup()
                .add(4, 4, 4)
                .add(lbleaddress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(txtcontact, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(lblcontact))
                            .add(lblecontact, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(0, 0, Short.MAX_VALUE)
                                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)))
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(txtmail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(lblmail))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(emailValidationError, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(5, 5, 5))))
        );
        // emailValidationError.getAccessibleContext().setAccessibleName("emailValidationError");

        lblcode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblcode.setText("Code");
        lblcode.setName("lblcode"); // NOI18N

        lblreference.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblreference.setText("Reference");
        lblreference.setName("lblreference"); // NOI18N

        lblrelation.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblrelation.setText("Relation");
        lblrelation.setName("lblrelation"); // NOI18N

        btnfind.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnfind.setText("Find");
        btnfind.setBorder(null);
        btnfind.setName("btnfind"); // NOI18N
        btnfind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfindActionPerformed(evt);
            }
        });
        btnfind.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnfindFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnfindFocusLost(evt);
            }
        });

        cborelation.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cborelation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELF", "FATHER", "MOTHER", "GRAND-PARENT", "BROTHER", "SISTER", "HUSBAND", "WIFE", "UNCLE", "AUNTY", "FRIEND" }));
        cborelation.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cborelation.setName("cborelation"); // NOI18N

        txtcode.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtcode.setName("txtcode"); // NOI18N

        txtreference.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtreference.setName("txtreference"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(lblcode)
                .add(90, 90, 90)
                .add(txtcode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(lblreference)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtreference, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(lblrelation)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(cborelation, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(btnfind, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(235, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblcode)
                    .add(txtreference, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtcode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblreference)
                    .add(lblrelation)
                    .add(cborelation, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnfind, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnexit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnexit.setText("Back");
        btnexit.setName("btnexit"); // NOI18N
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 0));
        jLabel1.setText("REGISTER");

        btnsubmit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnsubmit.setText("Submit");
        btnsubmit.setName("btnsubmit"); // NOI18N
        btnsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsubmitActionPerformed(evt);
            }
        });
        btnsubmit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnsubmitFocusGained(evt);
            }
        });

        btnclear.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnclear.setText("Clear");
        btnclear.setName("btnclear"); // NOI18N
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        lblbirth.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblbirth.setText("Date Of Birth");
        lblbirth.setName("lblbirth"); // NOI18N

        lblgender.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblgender.setText("Gender");
        lblgender.setName("lblgender"); // NOI18N

        lblage.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblage.setText("Age");
        lblage.setName("lblage"); // NOI18N

        lbloccupation.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbloccupation.setText("Occupation");
        lbloccupation.setName("lbloccupation"); // NOI18N

        txtoccupation.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtoccupation.setName("txtoccupation"); // NOI18N
        txtoccupation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtoccupationKeyReleased(evt);
            }
        });

        txtage.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtage.setName("txtage"); // NOI18N
        txtage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtageKeyReleased(evt);
            }
        });

        cboyear.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cboyear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1940", "1941", "1942", "1943", "1944", "1945", "1946", "1947", "1948", "1949", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020" }));
        cboyear.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cboyear.setName("cboyear"); // NOI18N
        cboyear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cboyearFocusLost(evt);
            }
        });

        cbomonth.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbomonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        cbomonth.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cbomonth.setName("cbomonth"); // NOI18N

        cboday.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cboday.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        cboday.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cboday.setName("cboday"); // NOI18N

        cbogender.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbogender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Male", "Female" }));
        cbogender.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cbogender.setName("cbogender"); // NOI18N

        lblyear.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblyear.setText("Year");
        lblyear.setName("lblyear"); // NOI18N

        lblmonth.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblmonth.setText("Month");
        lblmonth.setName("lblmonth"); // NOI18N

        lblday.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblday.setText("Day");
        lblday.setName("lblday"); // NOI18N

        lbleage.setForeground(new java.awt.Color(204, 51, 0));

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblbirth)
                    .add(lblgender))
                .add(44, 44, 44)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(cboday, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(10, 10, 10)
                                .add(lblday)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(10, 10, 10)
                                .add(lblmonth))
                            .add(cbomonth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(cbogender, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(lblyear))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(cboyear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(67, 67, 67)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lbloccupation)
                            .add(lblage))
                        .add(18, 18, 18)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(txtoccupation, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 209, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(txtage, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(lbleage, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 197, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(237, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(lblbirth)
                                    .add(cboday, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(cbomonth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(cboyear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(lblday)
                                    .add(lblyear)
                                    .add(lblmonth)))
                            .add(lbleage, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(lblgender)
                                .add(cbogender, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(lbloccupation)
                                .add(txtoccupation, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(48, 48, 48))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblage)
                            .add(txtage, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(127, 127, 127)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblallergy.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblallergy.setText("Allergy");
        lblallergy.setName("lblallergy"); // NOI18N

        txtallergy.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtallergy.setName("txtallergy"); // NOI18N
        txtallergy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtallergyKeyReleased(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(lblallergy)
                .add(78, 78, 78)
                .add(txtallergy, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 520, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(337, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblallergy)
                    .add(txtallergy, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(24, 24, 24))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(274, 274, 274)
                .add(jLabel1))
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(165, 165, 165)
                        .add(btnsubmit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(29, 29, 29)
                        .add(btnclear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(30, 30, 30)
                        .add(btnexit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 471, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .add(18, 18, 18)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(4, 4, 4)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(24, 24, 24)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnclear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnexit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnsubmit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtcontactFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcontactFocusLost
// TODO add your handling code here
         int a=0;
        String s=txtcontact.getText();
        if(!(s.equals("")))
        {
          a=s.length()-1;
              
          if((a<9))
          {
           
           txtcontact.setText("");
           txtcontact.requestFocus();
          }    
        } 
    }//GEN-LAST:event_txtcontactFocusLost

    private void txtallergyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtallergyKeyReleased
// TODO add your handling code here:
        
       String s=txtallergy.getText();
       if(!(s.equals("")))
       {    
        int a=s.length()-1;
        int i=(int)s.charAt(a);
        if(!((i>64&&i<91)||(i>95&&i<123)))
        {
            
            txtallergy.setText("");
        }
       } 
    }//GEN-LAST:event_txtallergyKeyReleased

    private void txtoccupationKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtoccupationKeyReleased
// TODO add your handling code here:
       String s=txtoccupation.getText();
       if(!(s.equals("")))
       {
        int a=s.length()-1;
        int i=(int)s.charAt(a);
        if(!((i>64&&i<91)||(i>95&&i<123)||i==32))
        {
           
            txtoccupation.setText("");
        }
       } 
        
    }//GEN-LAST:event_txtoccupationKeyReleased

    private void txtageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtageKeyReleased
// TODO add your handling code here:
        String s=txtage.getText();
        int a=s.length()-1;
       if(!(s.equals("")))
       {
        int i=(int)s.charAt(a);
        if(!(i>47&&i<58))
        {  
              lbleage.setText("Invalid Age");
            txtage.setText("");
        }
        else 
        {
            lbleage.setText("");
          int t20=Integer.parseInt(s);   
          if(!(t20>0&&t20<100))
          {
          lbleage.setText("Invalid Age");
           txtage.setText("");
          }
          else
          {
          lbleage.setText("");
          }
        }
       
       } 

    }//GEN-LAST:event_txtageKeyReleased

    private void txtcontactKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcontactKeyReleased
// TODO add your handling code here:
     
                String s=txtcontact.getText();
        if(!(s.equals("")))
        {
         int a=s.length()-1;
         int i=(int)s.charAt(a);
         if(!(i>47&&i<58))
        {
            lblecontact.setText("Invalid Number");
            txtcontact.setText("");

         }
         else
          {
             lblecontact.setText("");
             if(s.length()>11)
                 {
                   lblecontact.setText("Invalid Number");
                   txtcontact.setText("");
                  }
         else
         {
                 lblecontact.setText("");
         }} 
         }
    
    }//GEN-LAST:event_txtcontactKeyReleased

    private void txtlnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtlnameFocusGained
// TODO add your handling code here:
                 String fname1,fname2;
                 fname1=txtfname.getText().trim();
                 if(!(fname1.equals("")))
                 {
                     int i=fname1.length();
                     if(i>0)
                     {
                     fname2 = fname1.substring(0,1).toUpperCase() +fname1.substring(1);
                     txtfname.setText(fname2);        
                     }   
                 }   
    }//GEN-LAST:event_txtlnameFocusGained

    private void txtlnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtlnameKeyReleased
// TODO add your handling code here:
       String s=txtlname.getText();
       if(!(s.equals("")))
       {    
        int a=s.length()-1;
        int i=(int)s.charAt(a);
        if(!((i>64&&i<91)||(i>95&&i<123)))
        {
            lblename.setText("Invalid Name");
                 txtlname.setText("");
        }
        else
        {
         lblename.setText("");
        }
       } 
    }//GEN-LAST:event_txtlnameKeyReleased

    private void txtmnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmnameKeyReleased
// TODO add your handling code here:
         String s=txtmname.getText();
       
        if(!(s.equals("")))
        {  
         int a=s.length()-1;   
         int i=(int)s.charAt(a);
          if(!((i>64&&i<91)||(i>95&&i<123)))
          {
            
            txtmname.setText("");
         }
        } 
    }//GEN-LAST:event_txtmnameKeyReleased

    private void txtfnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfnameKeyReleased
// TODO add your handling code here:
       String s=txtfname.getText();
       if(!(s.equals("")))
       {      
        int a=s.length()-1;
        int i=(int)s.charAt(a);
        if(!((i>64&&i<91)||(i>95&&i<123)))
        {
            lblename.setText("Invalid Name");
            txtfname.setText("");
        }
        else
        {
        lblename.setText("");
        }
        
       } 
    }//GEN-LAST:event_txtfnameKeyReleased

    private void btnsubmitFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnsubmitFocusGained
// TODO add your handling code here:
//        this.dispose();
    }//GEN-LAST:event_btnsubmitFocusGained

    private void txtlnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtlnameFocusLost
// TODO add your handling code here:
        
        String s1=txtlname.getText();
        String s2,s3;
       int s5=0;
       if(!(s1.equals("")))
       {       
         s1=txtlname.getText();
         s2 = s1.substring(0,1).toUpperCase() +s1.substring(1);
         txtlname.setText(s2);
         s3=s1.substring(0,1);
        
        try{
        Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
        Connection con=DriverManager.getConnection("jdbc:odbc:rock");
        Statement st=con.createStatement();
        ResultSet rs=st.executeQuery("select count(lname)+1 from register where lname like '"+s3+"%'");
        while(rs.next())
        {
         s5=rs.getInt("");  
         txtcode.setText(s3+s5);
         txtreference.setText(s3+s5);
         }
      
        st.close();
        con.close();
     }
         catch(SQLException sq)
         {
            JOptionPane.showMessageDialog(this,"Database Error","Register",JOptionPane.ERROR_MESSAGE);
            
         } 
               catch(Exception e)
         {
         JOptionPane.showMessageDialog(this,"Error");
       
         }
    }     
    }//GEN-LAST:event_txtlnameFocusLost

    private void txtmnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtmnameFocusLost
// TODO add your handling code here:
        
    String mname1,mname2;
    mname1=txtmname.getText().trim();
    if(!(mname1.equals("")))
    {    
    int i=mname1.length();  
     if(i>0)
     {
         mname2 = mname1.substring(0,1).toUpperCase()+mname1.substring(1);
          txtmname.setText(mname2);
    }
    }
    }//GEN-LAST:event_txtmnameFocusLost

    private void txtfnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfnameFocusLost
// TODO add your handling code here:

    }//GEN-LAST:event_txtfnameFocusLost

    private void btnsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsubmitActionPerformed
          t1=txtfname.getText();
        t2=txtmname.getText();
        t3=txtlname.getText();
        t4=(String)cboday.getSelectedItem();
        t16=(String)cbomonth.getSelectedItem();
        t17=(String)cboyear.getSelectedItem();
        t6=(String)cbogender.getSelectedItem();
        t7=txtoccupation.getText();
        t8=txtaddress.getText();
        t9=txtcontact.getText();
        t10=txtmail.getText();
        t11=txtcode.getText();
        t12=txtallergy.getText();
        t15=txtreference.getText();
        t18=t4+"-"+t16+"-"+t17;
        t19=(String)cborelation.getSelectedItem();
        String z=txtage.getText();  
        pattern = Pattern.compile(EMAIL_PATTERN);
        boolean validEmail = validate(t10.trim());
        System.out.println("Valid Email : "+validEmail);
        
       if(!(t1.equals("")||t3.equals("")||t8.equals("")||z.equals("")|| !validEmail))
       {      
          t5=Integer.parseInt(z);    
          lblename.setText("");
          lbleage.setText("");
          lbleaddress.setText("");
          emailValidationError.setText("");
          if(rvi==false)
           { 
            p=new preview(t1,t2,t3,t18,t5,t6,t7,t8,t9,t10,t11,t12,t15,t19,t17);  
            p.setVisible(true);
            rvi=true;
           }
          else
          {
              
           rvi=p.isVisible();
           if(rvi==false)
            { 
             p=new preview(t1,t2,t3,t18,t5,t6,t7,t8,t9,t10,t11,t12,t15,t19,t17);  
             p.setVisible(true);
             rvi=true;
            }
           else
            {
             p.requestFocus();  
            }    
          }
       }
         else if(t1.equals("")&&t3.equals("")&&t8.equals("")&&z.equals("")&& !validEmail)
          {
              lblename.setText("Name Is Required");
              lbleage.setText("Enter Age");
              lbleaddress.setText("Enter Address"); 
              emailValidationError.setText("Enter Valid Email");
          }
         else if(t1.equals("")||t3.equals(""))
          {
             
            lblename.setText("Name Is Required");
            lbleage.setText("");
            lbleaddress.setText("");
            emailValidationError.setText(""); 
          }
         else if(z.equals(""))
          {
           lbleage.setText("Enter Age");
             lblename.setText("");
              lbleaddress.setText("");
          }   
         else if(t8.equals(""))
         {
           lbleaddress.setText("Enter Address"); 
             lblename.setText("");
              lbleage.setText("");
              emailValidationError.setText("");
         }  
            else if(!validEmail)
         {
           lbleaddress.setText(""); 
             lblename.setText("");
              lbleage.setText("");
              emailValidationError.setText("Enter Valid Email");
         }  
       
         
        
      
    }//GEN-LAST:event_btnsubmitActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
// TODO add your handling code here:
        txtfname.setText("");
        txtmname.setText("");
        txtlname.setText("");
        txtage.setText("");
        txtoccupation.setText("");
        txtaddress.setText("");
        txtcontact.setText("");
        txtmail.setText("");
        txtcode.setText("");
        txtallergy.setText("");
        txtreference.setText("");
    }//GEN-LAST:event_btnclearActionPerformed

    private void cboyearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cboyearFocusLost
// TODO add your handling code here:
        String day,month,year,dates;
        day=(String)cboday.getSelectedItem();
        month=(String)cbomonth.getSelectedItem();
        year=(String)cboyear.getSelectedItem();
        dates=day+"-"+month+"-"+year;
        try
         {
          try
          {       
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con=DriverManager.getConnection("jdbc:odbc:rock");
            Statement st=con.createStatement();
            ResultSet rs1=st.executeQuery("select count(fname) from register where dates='"+dates+"'");
            ResultSet rs=st.executeQuery("select year(getdate())-year('"+year+"')");
            while(rs.next())
            {
                s4=rs.getInt(1);
                txtage.setText(""+s4);
            }
            st.close();
            con.close();
          }
          catch(SQLException se)
          {
           JOptionPane.showMessageDialog(this,"Date of birth is not valid");
            txtage.setText("");
          }        
        } 
        catch(Exception e) 
        {
            JOptionPane.showMessageDialog(this,"error occur");
        }
    }//GEN-LAST:event_cboyearFocusLost

    private void btnfindFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnfindFocusLost
// TODO add your handling code here:
    }//GEN-LAST:event_btnfindFocusLost

    private void btnfindFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnfindFocusGained
// TODO add your handling code here:
        try{
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con=DriverManager.getConnection("jdbc:odbc:rock");
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select reference from refer");
            while(rs.next()) {
                String refe=rs.getString(1);
                txtreference.setText(refe);
            }
            int vo=st.executeUpdate("delete from refer");
            st.close();
            con.close();
        } catch(SQLException sq)
         {
            JOptionPane.showMessageDialog(this,"Database Error","refer",JOptionPane.ERROR_MESSAGE);
            
         } 
               catch(Exception e)
         {
         JOptionPane.showMessageDialog(this,"Error");
       
         }
    }//GEN-LAST:event_btnfindFocusGained

    private void btnfindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfindActionPerformed
// TODO add your handling code here:
        relative r=new relative();
        r.setVisible(true);
    }//GEN-LAST:event_btnfindActionPerformed

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
// TODO add your handling code here:
        p.dispose();
        this.dispose();
       
        
    }//GEN-LAST:event_btnexitActionPerformed

    private void txtcontactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcontactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcontactActionPerformed
        public static void main(String args[]) {
         register r=new register();
         r.setVisible(true);
    }
        
    public boolean validate(final String hex) {

        matcher = pattern.matcher(hex);
        return matcher.matches();

    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnfind;
    public javax.swing.JButton btnsubmit;
    public javax.swing.JComboBox cboday;
    public javax.swing.JComboBox cbogender;
    public javax.swing.JComboBox cbomonth;
    private javax.swing.JComboBox cborelation;
    public javax.swing.JComboBox cboyear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel emailValidationError;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbladdress;
    private javax.swing.JLabel lblage;
    private javax.swing.JLabel lblallergy;
    private javax.swing.JLabel lblbirth;
    private javax.swing.JLabel lblcode;
    private javax.swing.JLabel lblcontact;
    private javax.swing.JLabel lblday;
    private javax.swing.JLabel lbleaddress;
    private javax.swing.JLabel lbleage;
    private javax.swing.JLabel lblecontact;
    private javax.swing.JLabel lblename;
    private javax.swing.JLabel lblfname;
    private javax.swing.JLabel lblgender;
    private javax.swing.JLabel lbllname;
    private javax.swing.JLabel lblmail;
    private javax.swing.JLabel lblmname;
    private javax.swing.JLabel lblmonth;
    private javax.swing.JLabel lbloccupation;
    private javax.swing.JLabel lblpatient;
    private javax.swing.JLabel lblreference;
    private javax.swing.JLabel lblrelation;
    private javax.swing.JLabel lblyear;
    private javax.swing.JTextArea txtaddress;
    private javax.swing.JTextField txtage;
    private javax.swing.JTextField txtallergy;
    private javax.swing.JLabel txtcode;
    private javax.swing.JTextField txtcontact;
    private javax.swing.JTextField txtfname;
    private javax.swing.JTextField txtlname;
    private javax.swing.JTextField txtmail;
    private javax.swing.JTextField txtmname;
    private javax.swing.JTextField txtoccupation;
    private javax.swing.JLabel txtreference;
    // End of variables declaration//GEN-END:variables
    
}
